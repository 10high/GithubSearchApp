{"mappings":"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","sources":["src/js/pageElements.js","src/js/apiFetch.js","src/js/insertContent.js","src/js/colorSchemes.js","src/app.js"],"sourcesContent":["const pageElementIds = [\r\n    \"enterUsername\",\r\n    \"profileImg\",\r\n    \"name\",\r\n    \"username\",\r\n    \"bio\",\r\n    \"location\",\r\n    \"twitter\",\r\n    \"twitterLink\",\r\n    \"twitterNotAvailable\",\r\n    \"joinedDate\",\r\n    \"followers\",\r\n    \"following\",\r\n    \"repos\",\r\n    \"website\",\r\n    \"websiteNotAvailable\",\r\n    \"websiteLink\",\r\n    \"company\",\r\n    \"companyNotAvailable\",\r\n    \"companyLink\",\r\n    \"errorMessage\",\r\n    \"searchButton\",\r\n    \"lightmodeToggle\",\r\n    \"darkmodeToggle\",\r\n    \"headerButton\",\r\n    \"searchWrapper\",\r\n    \"profileCard\"\r\n]\r\n\r\nconst pageElements = {}\r\n\r\nconst populatePageElements = () => {\r\n    for (let id of pageElementIds) {\r\n        let element = document.getElementById(id)\r\n        pageElements[id] = element;\r\n    }\r\n}\r\npopulatePageElements();\r\nexport { pageElements };","import { pageElements } from \"./pageElements\";\r\n\r\nconst defineApiSearchQuery = () => {\r\n    const usernameInputValue = pageElements.enterUsername.value;\r\n    const apiSearchQuery = `https://api.github.com/users/${usernameInputValue}`;\r\n    return apiSearchQuery;\r\n}\r\n\r\nconst searchRequest = async (searchQuery) => {\r\n    try {\r\n        const resolved = await fetch(searchQuery);\r\n        if (resolved.status === 200) {\r\n            const data = await resolved.json();\r\n            return data;\r\n        } else {\r\n            return null;\r\n        };\r\n\r\n    } catch (error) {\r\n        console.log(\"this is the error\" + error);\r\n    }\r\n}\r\n\r\nexport { defineApiSearchQuery, searchRequest };","import { pageElements } from \"./pageElements\";\r\n\r\n\r\nconst insertProfilePic = data => pageElements.profileImg.setAttribute(\"src\", data.avatar_url);\r\n\r\nconst formatAndInsertName = data => {\r\n    let nameValue = data.name;\r\n    if (!nameValue) {\r\n        nameValue = data.login;\r\n        nameValue = nameValue.replace(/^@/, \"\");\r\n    }\r\n    pageElements.name.innerText = nameValue;\r\n}\r\n\r\nconst formatAndInsertJoinedDate = data => {\r\n    let signupDate = new Date(data.created_at);\r\n    signupDate = signupDate.toLocaleDateString('en-gb', { day: \"numeric\", month: \"short\", year: \"numeric\" });\r\n    pageElements.joinedDate.innerText = `Joined ${signupDate}`;\r\n}\r\n\r\nconst insertUsername = data => {\r\n    let username = data.login;\r\n    username = username.replace(/^@/, \"\");\r\n    pageElements.username.innerText = `@${username}`;\r\n}\r\n\r\nconst formatAndInsertBio = data => {\r\n    pageElements.bio.classList.remove(\"notAvailable\");\r\n    let bioValue = data.bio;\r\n    if (!bioValue) {\r\n        bioValue = \"This profile has no bio\"\r\n        pageElements.bio.classList.add(\"notAvailable\");\r\n    }\r\n    pageElements.bio.innerText = bioValue;\r\n}\r\n\r\nconst insertRepos = data => pageElements.repos.innerText = data.public_repos;\r\n\r\nconst insertFollowers = data => pageElements.followers.innerText = data.followers;\r\n\r\nconst insertFollowing = data => pageElements.following.innerText = data.following;\r\n\r\nconst formatAndInsertLocation = data => {\r\n    pageElements.location.classList.remove(\"notAvailable\");\r\n    let locationValue = data.location;\r\n    if (!locationValue) {\r\n        locationValue = \"Not Available\";\r\n        pageElements.location.classList.add(\"notAvailable\");\r\n    }\r\n    pageElements.location.innerText = locationValue;\r\n}\r\n\r\nconst formatAndInsertTwitter = data => {\r\n    let twitterValue = data.twitter_username;\r\n    if (!twitterValue) {\r\n        pageElements.twitter.hidden = true;\r\n        pageElements.twitterNotAvailable.hidden = false;\r\n    } else {\r\n        pageElements.twitter.hidden = false;\r\n        pageElements.twitterNotAvailable.hidden = true;\r\n        pageElements.twitterLink.innerText = twitterValue;\r\n        twitterValue = twitterValue.replace(/^@/, \"\");\r\n        twitterValue = `https://twitter.com/${twitterValue}`;\r\n        pageElements.twitterLink.setAttribute(\"href\", twitterValue);\r\n    }\r\n}\r\n\r\nconst formatAndInsertWebsite = data => {\r\n    let websiteValue = data.blog;\r\n    if (!websiteValue) {\r\n        pageElements.website.hidden = true;\r\n        pageElements.websiteNotAvailable.hidden = false;\r\n    } else {\r\n        pageElements.website.hidden = false;\r\n        pageElements.websiteNotAvailable.hidden = true;\r\n        pageElements.websiteLink.setAttribute(\"href\", websiteValue);\r\n        pageElements.websiteLink.innerText = websiteValue;\r\n    }\r\n}\r\n\r\nconst formatAndInsertCompany = data => {\r\n    let companyValue = data.company;\r\n    if (!companyValue || companyValue[0] !== \"@\") {\r\n        pageElements.company.hidden = true;\r\n        pageElements.companyNotAvailable.hidden = false;\r\n    } else {\r\n        pageElements.company.hidden = false;\r\n        pageElements.companyNotAvailable.hidden = true;\r\n        pageElements.companyLink.innerText = companyValue;\r\n        console.log(companyValue);\r\n        companyValue = companyValue.replace(/^@/, \"\");\r\n        console.log(companyValue);\r\n        companyValue = `https://github.com/${companyValue}`;\r\n        pageElements.companyLink.setAttribute(\"href\", companyValue);\r\n    }\r\n}\r\n\r\n/* Pertinent property names are:\r\n        data.avatar_url id=\"profileImg\"\r\n        data.name id=\"name\" \r\n        data.login id=\"username\"\r\n        data.bio id=\"bio\"\r\n        data.location id=\"location\"\r\n        data.blog \r\n        data.twitter_username id=\"twitter\"\r\n        data.company \r\n        data.created_at id=\"joinedDate\"\r\n        data.followers id=\"followers\"\r\n        data.following id=\"following\"\r\n        data.public_repos id=\"repos\"\r\n        */\r\n\r\nexport { insertProfilePic, formatAndInsertName, formatAndInsertJoinedDate, insertUsername, formatAndInsertBio, insertRepos, insertFollowers, insertFollowing, formatAndInsertLocation, formatAndInsertTwitter, formatAndInsertWebsite, formatAndInsertCompany };","import { pageElements } from \"./pageElements\";\r\n\r\nconst colorVars = {\r\n    isLightMode: true\r\n}\r\n\r\nconst setDarkMode = () => {\r\n    document.documentElement.style.setProperty(\"--headerFontColor\", `#FFFFFF`);\r\n    document.documentElement.style.setProperty(\"--toggleModeFontColor\", `#FFFFFF`);\r\n    document.documentElement.style.setProperty(\"--toggleModeFontColorHover\", `#90A4D4`);\r\n    document.documentElement.style.setProperty(\"--bodyColor\", `#141D2F`);\r\n    document.documentElement.style.setProperty(\"--searchBGColor\", `#1E2A47`);\r\n    document.documentElement.style.setProperty(\"--searchInputFontColor\", `#FFFFFF`);\r\n    document.documentElement.style.setProperty(\"--searchInputPlaceholderFontColor\", `#FFFFFF`);\r\n    document.documentElement.style.setProperty(\"--profileCardBGColor\", `#1E2A47`);\r\n    document.documentElement.style.setProperty(\"--profileCardNameFontColor\", `#FFFFFF`);\r\n    document.documentElement.style.setProperty(\"--profileCardJoinedFontColor\", `#FFFFFF`);\r\n    document.documentElement.style.setProperty(\"--profileCardBioFontColor\", `#FFFFFF`);\r\n    document.documentElement.style.setProperty(\"--profileCardStatsBGColor\", `#141D2F`);\r\n    document.documentElement.style.setProperty(\"--profileCardStatsHeaderFontColor\", `#FFFFFF`);\r\n    document.documentElement.style.setProperty(\"--profileCardStatsNumberFontColor\", `#FFFFFF`);\r\n    document.documentElement.style.setProperty(\"--profileCardFooterIconLabelFontColor\", `#FFFFFF`);\r\n    pageElements.darkmodeToggle.hidden = true;\r\n    pageElements.lightmodeToggle.hidden = false;\r\n    pageElements.profileCard.classList.remove(\"lightmode--dropshadow\");\r\n    pageElements.searchWrapper.classList.remove(\"lightmode--dropshadow\");\r\n}\r\n\r\nconst setLightMode = () => {\r\n    document.documentElement.style.setProperty(\"--headerFontColor\", `#222731`);\r\n    document.documentElement.style.setProperty(\"--toggleModeFontColor\", `#4B6A9B`);\r\n    document.documentElement.style.setProperty(\"--toggleModeFontColorHover\", `#222731`);\r\n    document.documentElement.style.setProperty(\"--bodyColor\", `#F6F8FF`);\r\n    document.documentElement.style.setProperty(\"--searchBGColor\", `#FEFEFE`);\r\n    document.documentElement.style.setProperty(\"--searchInputFontColor\", `#222731`);\r\n    document.documentElement.style.setProperty(\"--searchInputPlaceholderFontColor\", `#4B6A9B`);\r\n    document.documentElement.style.setProperty(\"--profileCardBGColor\", `#FEFEFE`);\r\n    document.documentElement.style.setProperty(\"--profileCardNameFontColor\", `#2B3442`);\r\n    document.documentElement.style.setProperty(\"--profileCardJoinedFontColor\", `#697C9A`);\r\n    document.documentElement.style.setProperty(\"--profileCardBioFontColor\", `#4B6A9B`);\r\n    document.documentElement.style.setProperty(\"--profileCardStatsBGColor\", `#F6F8FF`);\r\n    document.documentElement.style.setProperty(\"--profileCardStatsHeaderFontColor\", `#4B6A9B`);\r\n    document.documentElement.style.setProperty(\"--profileCardStatsNumberFontColor\", `#2B3442`);\r\n    document.documentElement.style.setProperty(\"--profileCardFooterIconLabelFontColor\", `#4B6A9B`);\r\n    pageElements.darkmodeToggle.hidden = false;\r\n    pageElements.lightmodeToggle.hidden = true;\r\n    pageElements.profileCard.classList.add(\"lightmode--dropshadow\");\r\n    pageElements.searchWrapper.classList.add(\"lightmode--dropshadow\");\r\n}\r\n\r\nconst toggleColorScheme = () => {\r\n    if (!colorVars.isLightMode) {\r\n        colorVars.isLightMode = true;\r\n        setLightMode();\r\n    } else {\r\n        colorVars.isLightMode = false;\r\n        setDarkMode();\r\n    }\r\n}\r\n\r\nif (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n    toggleColorScheme();\r\n}\r\n\r\nexport { toggleColorScheme }","import { pageElements } from \"./js/pageElements\";\r\nimport { defineApiSearchQuery, searchRequest } from \"./js/apiFetch\";\r\nimport { insertProfilePic, formatAndInsertName, formatAndInsertJoinedDate, insertUsername, formatAndInsertBio, insertRepos, insertFollowers, insertFollowing, formatAndInsertLocation, formatAndInsertTwitter, formatAndInsertWebsite, formatAndInsertCompany } from \"./js/insertContent\";\r\nimport { toggleColorScheme } from \"./js/colorSchemes\";\r\n\r\n\r\nconst onPageOpen = async () => {\r\n  const userData = await searchRequest(\"https://api.github.com/users/octocat\");\r\n  pageElements.errorMessage.hidden = true;\r\n  insertProfilePic(userData);\r\n  formatAndInsertName(userData);\r\n  formatAndInsertJoinedDate(userData);\r\n  insertUsername(userData);\r\n  formatAndInsertBio(userData);\r\n  insertRepos(userData);\r\n  insertFollowers(userData);\r\n  insertFollowing(userData);\r\n  formatAndInsertLocation(userData);\r\n  formatAndInsertTwitter(userData);\r\n  formatAndInsertWebsite(userData);\r\n  formatAndInsertCompany(userData);\r\n}\r\n\r\nconst manager = async () => {\r\n  const userData = await searchRequest(defineApiSearchQuery());\r\n  if (userData === null) {\r\n    pageElements.errorMessage.hidden = false;\r\n    return;\r\n  }\r\n  pageElements.errorMessage.hidden = true;\r\n  insertProfilePic(userData);\r\n  formatAndInsertName(userData);\r\n  formatAndInsertJoinedDate(userData);\r\n  insertUsername(userData);\r\n  formatAndInsertBio(userData);\r\n  insertRepos(userData);\r\n  insertFollowers(userData);\r\n  insertFollowing(userData);\r\n  formatAndInsertLocation(userData);\r\n  formatAndInsertTwitter(userData);\r\n  formatAndInsertWebsite(userData);\r\n  formatAndInsertCompany(userData);\r\n}\r\n\r\nconst isEqualsEnter = keycode => keycode.key === \"Enter\";\r\n\r\nconst addEventListeners = () => {\r\n  pageElements.searchButton.addEventListener(\"pointerdown\", manager);\r\n  pageElements.searchButton.addEventListener(\"keydown\", (event) => {\r\n    isEqualsEnter(event) && manager();\r\n  });\r\n  pageElements.enterUsername.addEventListener(\"keydown\", (event) => {\r\n    isEqualsEnter(event) && manager();\r\n  });\r\n  pageElements.headerButton.addEventListener(\"pointerdown\", toggleColorScheme);\r\n  pageElements.headerButton.addEventListener(\"keydown\", (event) => {\r\n    isEqualsEnter(event) && toggleColorScheme();\r\n  });\r\n}\r\n\r\naddEventListeners();\r\nonPageOpen();\r\n\r\n/* \r\nExpected behaviour\r\n- On first load, show the profile information for Octocat.\r\n- Display an error message (as shown in the design) if no user is found when a new search is made.\r\n- If a GitHub user hasn't added their name, show their username where the name would be without the @ symbol and again below with the @ symbol.\r\n- If a GitHub user's bio is empty, show the text \"This profile has no bio\" with transparency added (as shown in the design).\r\n  The lorem ipsum text in the designs shows how the bio should look when it is present.\r\n- If any of the location, website, twitter, or company properties are empty, show the text \"Not Available\" with transparency added (as shown in the design).\r\n- Website, twitter, and company information should all be links to those resaources. \r\n  For the company link, it should remove the @ symbol and link to the company page on GitHub. \r\n  For Octocat, with @github being returned for the company, this would lead to a URL of https://github.com/github. \r\n  */"],"names":["$b626b241be25d385$var$pageElementIds","$b626b241be25d385$export$4075153450e5c62e","id","element","document","getElementById","$b626b241be25d385$var$populatePageElements","$b9e6f7a0f8eaf0af$export$d153cc6c5f32ea0d","async","searchQuery","resolved","fetch","status","json","error","console","log","$44ca3d364f125912$export$9d07e56966ca693","data","profileImg","setAttribute","avatar_url","$44ca3d364f125912$export$732858a3b5a0c60f","nameValue","name","login","replace","innerText","$44ca3d364f125912$export$78b1db96ad4aab22","signupDate","Date","created_at","toLocaleDateString","day","month","year","joinedDate","$44ca3d364f125912$export$6ae62895bd6ed28f","username","$44ca3d364f125912$export$f2df7fe6e013ec8a","bio","classList","remove","bioValue","add","$44ca3d364f125912$export$6eb8986f3a9bfec1","repos","public_repos","$44ca3d364f125912$export$84a5afe19798313a","followers","$44ca3d364f125912$export$a9e3d6d6bb276680","following","$44ca3d364f125912$export$f8b6447843fb2dfb","location","locationValue","$44ca3d364f125912$export$459760284be83d7a","twitterValue","twitter_username","twitter","hidden","twitterNotAvailable","twitterLink","$44ca3d364f125912$export$490df646a91f9f99","websiteValue","blog","website","websiteNotAvailable","websiteLink","$44ca3d364f125912$export$f3cd2460d36286ef","companyValue","company","companyNotAvailable","companyLink","$43e37a6e722bd402$var$colorVars","isLightMode","$43e37a6e722bd402$export$f27f8b9dd83d9fe6","documentElement","style","setProperty","darkmodeToggle","lightmodeToggle","profileCard","searchWrapper","window","matchMedia","matches","$6f40c3a58f594b58$var$manager","userData","enterUsername","value","errorMessage","$6f40c3a58f594b58$var$isEqualsEnter","keycode","key","searchButton","addEventListener","event","headerButton","$6f40c3a58f594b58$var$onPageOpen"],"version":3,"file":"index.de3097c8.js.map"}